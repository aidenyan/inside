<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.sys.mapper.SysAreaMapper" >
  <resultMap id="BaseResultMap" type="com.jimmy.dao.sys.entity.SysArea" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="parent_tree" property="parentTree" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="modify_id" property="modifyId" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, code, full_name, parent_id,parent_tree, create_time, modify_time, create_id, modify_id
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_area
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectConcatAreaIds" resultType="java.lang.String" parameterType="java.lang.Long" >
	    SELECT
	  GROUP_CONCAT(id)
	FROM
	  t_sys_area
	WHERE deleted = 0
	  AND parent_tree LIKE 
	  concat("%,",#{parentId,jdbcType=VARCHAR},",%")
	ORDER BY id
  </select>
  
  <select id="selectByFullName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_area
    where full_name like concat("%",#{fullName,jdbcType=VARCHAR},"%")
  </select>
  
   <select id="listSysAreaByParent" resultMap="BaseResultMap" parameterType="java.util.List" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_area
    where deleted=0
    <choose>
    <when test="parentIdList != null and parentIdList.size()>0" >
       and parent_id  in <foreach collection="parentIdList" close=")" open="(" separator="," item="parentId">
      #{parentId}
    </foreach>
    </when>
    <otherwise>
       and parent_id is null
    </otherwise>
    </choose>
    order by id
  </select>
  
  <select id="listByIds" resultMap="BaseResultMap" parameterType="java.util.List" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_area
    where deleted=0 and id in
    <foreach collection="ids" item="id" open="(" close=")" separator="," >
         #{id}
    </foreach>
  </select>
  <select id="getAreaByAreaName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_sys_area
    where deleted=0 and name = #{areaName}
  </select>
  
   <select id="listSelectArea" resultMap="BaseResultMap" parameterType="java.lang.Long" >
  	 SELECT
	<include refid="Base_Column_List" />
	FROM t_sys_area
	WHERE deleted=0 and
	LOCATE(
		parent_tree,
		(
			SELECT
				a.parent_tree
			FROM
				t_sys_area a
			WHERE
				a.id = #{areaId}
		)
	) > 0
	ORDER BY
	id
  </select>
  
  <select id="listAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_area
    where deleted=0
  </select>
  <select id="listProvince" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_sys_area
    where deleted=0
    and parent_id is null
  </select>
  <update id="delete" parameterType="map" >
    update t_sys_area set deleted=1,modify_id=#{modifyId,jdbcType=INTEGER},
    modify_time=now()
    where id = #{id}
  </update>
  
  <insert id="insert" parameterType="com.jimmy.dao.sys.entity.SysArea" >
    insert into t_sys_area (id, name, code, 
      full_name,orders,parent_tree, parent_id, create_time, 
      modify_time, create_id, modify_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{fullName,jdbcType=VARCHAR}, #{orders,jdbcType=INTEGER}, #{parentTree,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{modifyId,jdbcType=INTEGER}
      )
  </insert>
  
  <update id="update" parameterType="com.jimmy.dao.sys.entity.SysArea" >
    update t_sys_area
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null" >
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="orders != null" >
        orders = #{orders,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="modifyId != null" >
        modify_id = #{modifyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listSysAreaByFullName" resultType="com.jimmy.dao.sys.entity.SysArea" >
    select
    <include refid="Base_Column_List" />
    from t_sys_area
    where full_name in <foreach collection="areaSet" close=")" open="(" separator="," item="fullName">
    #{fullName}
  </foreach>
  </select>

</mapper>